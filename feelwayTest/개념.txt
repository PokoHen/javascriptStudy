
# theory

-	“점진적 기능향상법” 과 “점진적 성능저하법” 에 대해서 설명해 주세요
: 점진적 기능향상법은 오래된 기술을 이용하여 먼저 프로젝트를 완성한 뒤 최신 기술을 적용하는 방법으로 점진적으로 기술을 향상하는 방법이며 점진적 성능저하법은 최신기술을 이용하여 먼저 프로젝트를 끝내고 난 뒤 오래된 브라우저에서도 적용할 수 있도록 최대한 비슷한 기능을 부여하는 방법입니다.
-	polyfill 에 대해 설명해 주세요
: polyfill은 점진적 성능저하법에서 적용이 가능하며 최신 브라우저에 적용된 최신 기술들을 오래된 버전에서도 사용할 수 있게 비슷한 기능을 입력하는 것을 말합니다. 
-	Safe font 에 대해서 설명해 주세요
: Safe font는 시스템이 가지고 있는 고유 언어이므로 따로 다운로드나 import를 하지 않더라도 적용이 가능한 font입니다.

# Markup

-	아래 태그를 설명해 주세요
* main : 메인 컨텐츠가 되는 태그
* nav : 네비게이션으로 메뉴에 적용되는 태그
* samp : 샘플 태그
* datalist : input태그에 list로 연결하여 select처럼 사용할 수 있게 하는 태그
* details : 세부적인 내용을 보여주는 태그
* summary : details태그의 제목을 나타내는 태그 
* q : span과 비슷하지만 “”를 붙여 화면에 보여주는 태그
* dl : 용어를 설명할 때 쓰는 태그로 <dt><dd>와 함께 사용한다.
* figure : 컨텐츠를 넣기 위한 태그
* progress : value값을 넣어서 진행률(0%~100%)을 나타낼 수 있는 태그
* meter : min과 mix로 범위를 정하고 value값으로 progress처럼 나타내는 태그
* wbr : 글자가 width가 넘어갈 때, 원하는 위치에서 줄을 바꾸는 태그
* kbd : span처럼 사용가능하지만 사용하면 태그 안의 글자의 약간 아래로 그리고 얇게 변하는 태그
* cite : italic(i) 태그와 비슷하게 글자를 옆으로 눕히는 태그
* var : 변수, let과 const와 다르게 선언 시 같은 이름으로 다시 선언 가능한 변수
* mark : 원하는 부분을 하이라이트 효과를 주는 태그

-	 `data-` 속성은 무엇을 하는 것인가요? 사용했을 때 이점은 무엇인가요 
: 사용자 지정 태그 속성이며, class와 id 같은 요소를 가진 태그라도 ‘data-‘속성으로 개별로 스타일을 바꾸거나 기능을 변경할 수 있습니다.
-	`<script>`, `<script async>`와 `<script defer>`의 차이점은 무엇인가요 
: 사이트를 실행할 때, script는 먼저 html 요소를 읽다가 중간에 요소를 읽는 것을 멈추고 javascript 파일을 다운을 받고 패치를 하지만 async이나 defer를 넣으면 html 요소를 읽는 동시에 javascript 파일을 다운 받습니다. 하지만 async은 파일이 다 다운 받으면 html을 읽는 것을 멈추고 javascript를 실행이 끝난 뒤에 다시 html을 읽습니다. defer은 javascript를 다운을 다 받더라도 html을 다 읽고 난 뒤에 javascript를 실행합니다.

# Style

-	아래의 스타일시트를 설명하세요
* text-justify : 텍스트 간격을 정의하는 태그
* text-transform : 영문을 대문자로 또는 소문자로 바꾸는 태그
* justify—content : display flex 안의 요소들을 기준선에 맞추어 정렬시키는 태그
* border-collapse
* list-style : ul아니 ol 등 리스트를 포함하는 태그의 리스트들의 머리부분을 원, 빈원, 사각형 등으로 꾸밀 수 있는 태그
* transition : html 요소를 정해진 시간 동안 요소의 속성값을 부드럽게 변환시키는 태그
* transform : html 요소의 모양, 크기, 위치 등을 바꿀 수 있는 태그
* border-image : 테두리에 그림 파일을 넣어 주는 태그
* box-shadow : 선언한 박스의 그림자를 나타내는 태그. x, y축 그림자크기, 그림자 번짐을 설정할 수 있는 태그
* box-sizing : 박스 사이즈를 외부 조건(border, padding 등)을 포함을 시켜 정의하거나 별개로 사이즈를 선언하는 태그

-	CSS 스프라이트(CSS Sprites)와 IR(Image Replace)의 차이점은 무엇인가요
: CSS 스프라이트는 하나의 이미지에 여러 이미지를 넣어서 사용하는 것입니다. 배경이미지로 활용을 많이 하며 배경이미지 위치를 선언하여 원하는 이미지를 줍니다. IR 기법은 이미지가 하나하나 존재하고 배경이미지를 넣고 설명까지 넣어서 이미지가 보이지 않을 시에 설명이 이미지를 대처할 수 있다.
-	요소배치를 지정하는 "position:absolute; left:20px", "transform: translateX(20px)" 의 차이점은 무엇인가요
: position: absolute를 선언하면 position이 선언이 되어 있는 부모의 박스 외각에 맞추어 요소를 배치를 하고, transform의 translateX는 자신의 위치에서 왼쪽으로 20px만큼 요소를 이동시킵니다.
-	pseudo-elements의 개념은 무엇이고, 어떤 종류가 있는지 하나씩 예제를 들어 설명해 주세요
: pseudo-elements는 html에 존재하지 않지만 가상 요소를 만들어서 추가하는 방법입니다. 하나의 태그 뒤에 ‘::’를 적고 그 뒤에 pseudo-elements의 값을 적어 표현합니다. 예를 들면 before과 after가 존재합니다. div::before, div::after를 적으면서 표현을 하며 before는 태그 앞에 설명을 넣거나 도형을 넣을 때 사용하며 after은 태그 뒤에 설명을 넣거나 도형을 넣을 때 사용합니다.
-	BEM(Block Element Modifier) 에 대해서 설명해 주세요
: 블록요소를 가지고 있는 태그이며, 가로값을 선언하지 않으면 기본 100%를 가지게 되어 내가 보이는 창의 가로값을 전체적으로 가지게 됩니다. 그리고 br 태그를 사용하여 줄 바꿈을 따로 선언하지 않아도 BEM 요소를 사용하면 줄이 자동으로 바뀝니다. 또한 가로값과 세로값을 임의로 정할 수 있습니다.
